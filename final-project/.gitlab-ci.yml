stages:
  - validate
  - plan
  - apply
  - destroy
  - install-docker
  - install-vault
  - install-rocket

image:
  name: hashicorp/terraform:light
  entrypoint:
    - "/usr/bin/env"
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

before_script:
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - rm -rf .terraform
  - terraform --version
  - terraform init

validate:
  stage: validate
  script:
    - terraform validate
  tags:
    - ci-shared

plan:
  stage: plan
  script:
    - terraform init
    - terraform plan -lock=false -var "SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}" -var "SSH_PUBLIC_KEY=${SSH_PUBLIC_KEY}" -var "gitlab_runner_description=${gitlab_runner_description}" -var "gitlab_instance_url=${gitlab_instance_url}" -var "registration_token=${registration_token}"
  dependencies:
    - validate
  artifacts:
    paths:
      - planfile
  tags:
    - ci-shared

apply:
  stage: apply
  script:
    - terraform init
    - terraform apply --auto-approve -lock=false -var "SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}" -var "SSH_PUBLIC_KEY=${SSH_PUBLIC_KEY}" -var "gitlab_runner_description=${gitlab_runner_description}" -var "gitlab_instance_url=${gitlab_instance_url}" -var "registration_token=${registration_token}"
  dependencies:
    - plan
  when: manual
  tags:
    - ci-shared

destroy:
  stage: destroy
  script:
    - terraform init
    - terraform destroy --auto-approve -lock=false -var "SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}" -var "SSH_PUBLIC_KEY=${SSH_PUBLIC_KEY}" -var "gitlab_runner_description=${gitlab_runner_description}" -var "gitlab_instance_url=${gitlab_instance_url}" -var "registration_token=${registration_token}"
  dependencies:
    - plan
  when: manual
  tags:
    - ci-shared

install-docker:
  stage: install-docker
  script:
    - cd ./ansible
    - sudo ansible-playbook -i /inventory --private-key=/root/.ssh/id_rsa install-docker-compose.yml
  tags:
    - ec2-instance
  when: manual
  before_script: []

install-vault:
  stage: install-vault
  script:
    - cd ./ansible
    - sudo ansible-playbook -i /inventory --private-key=/root/.ssh/id_rsa playbookVault.yml
  tags:
    - ec2-instance
  when: manual
  before_script: []

install-rocket:
  stage: install-rocket
  script:
    - cd ./ansible
    - sudo ansible-playbook -i /inventory --private-key=/root/.ssh/id_rsa playbookRocket.yml
  tags:
    - ec2-instance
  when: manual
  before_script: []
